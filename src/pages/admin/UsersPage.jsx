import React, { useState, useEffect } from 'react';
import { 
  Box, 
  Typography, 
  Paper, 
  Button,
  IconButton,
  Dialog,
  DialogActions,
  DialogContent,
  DialogContentText,
  DialogTitle,
  Container,
  TextField,
  MenuItem,
  Grid,
  Chip,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TablePagination,
  Alert,
  AlertTitle,
  useTheme
} from '@mui/material';
import { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Warning as WarningIcon } from '@mui/icons-material';
import adminUserService from '../../services/adminUserService';
import PageHeader from '../../components/common/PageHeader';
import { AdminTable, FilterBar, ConfirmDialog } from '../../components/admin/common';
import { useToast } from '../../context/ToastContext';
import { translateError } from '../../utils/errorMessages';

const UsersPage = () => {
  const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(10);
  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);
  const [selectedUser, setSelectedUser] = useState(null);
  const [openEditDialog, setOpenEditDialog] = useState(false);
  const [openAddDialog, setOpenAddDialog] = useState(false);
  const [formError, setFormError] = useState('');
  const [addUserLoading, setAddUserLoading] = useState(false);
  const [editUserLoading, setEditUserLoading] = useState(false);
  const { success, error: showError } = useToast();
  const [formData, setFormData] = useState({
    username: '',
    password: '',
    firstName: '',
    lastName: '',
    email: '',
    phoneNumber: '',
    role: 'student',
    faculty: '',
    specialization: '',
    studentId: ''
  });
  const theme = useTheme();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchUsers();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const fetchUsers = async () => {
    try {
      setLoading(true);
      const response = await adminUserService.getUsers();
      if (response.success) {
        setUsers(response.data);
      }
    } catch (error) {
      console.error('Error fetching users:', error);
    } finally {
      setLoading(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleFormChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleAddUser = async () => {
    try {
      setAddUserLoading(true);
      setFormError('');
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞
      if (!formData.username || !formData.password || !formData.firstName || 
          !formData.lastName || !formData.email || !formData.role) {
        setFormError('–ë–∞—Ä–ª—ã“õ –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑');
        return;
      }
      
      console.log('üëâ Sending registration data:', formData);
      const response = await adminUserService.createUser(formData);
      
      if (response.success) {
        // –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success(`–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã ${formData.firstName} ${formData.lastName} —Å”ô—Ç—Ç—ñ “õ“±—Ä—ã–ª–¥—ã`);
        fetchUsers();
        setOpenAddDialog(false);
        resetForm();
      }
    } catch (error) {
      console.error('‚ùå Error creating user:', error);
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      if (typeof error === 'object') {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
        if (error.message) {
          setFormError(error.message);
          
          // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ
          if (error.field) {
            const errorField = document.querySelector(`input[name="${error.field}"]`);
            if (errorField) {
              errorField.focus();
              errorField.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
          }
        } else if (error.response && error.response.data) {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ API
          const { data } = error.response;
          
          if (typeof data === 'string') {
            setFormError(translateError(data));
          } else if (data.error || data.message) {
            setFormError(translateError(data.error || data.message));
          } else {
            setFormError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã “õ“±—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—ñ–ø, “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
          }
        } else {
          // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
          setFormError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã “õ“±—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—ñ–ø, “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
        }
      } else if (typeof error === 'string') {
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–æ–π
        setFormError(translateError(error));
      } else {
        // –î–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        setFormError('–ë–µ–ª–≥—ñ—Å—ñ–∑ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. ”ò—Ä–µ–∫–µ—Ç—Ç—ñ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
      }
      
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (error.response) {
        console.error('Error status:', error.response.status);
        console.error('Error data:', error.response.data);
      }
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É —Ç–∞–∫–∂–µ —á–µ—Ä–µ–∑ Toast
      showError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ“±—Ä—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã');
    } finally {
      setAddUserLoading(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleEditUser = async () => {
    try {
      if (!selectedUser) return;
      
      setEditUserLoading(true);
      setFormError('');
      
      console.log('üìù –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', formData);
      const response = await adminUserService.updateUser(selectedUser.id, formData);
      
      if (response.success) {
        success(`–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã ${formData.firstName} ${formData.lastName} —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã`);
        fetchUsers();
        setOpenEditDialog(false);
        resetForm();
      }
    } catch (error) {
      console.error('‚ùå Error updating user:', error);
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      if (typeof error === 'object') {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        if (error.message) {
          setFormError(error.message);
          
          // –í—ã–¥–µ–ª–µ–Ω–∏–µ –∏ —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π
          if (error.field) {
            const errorField = document.querySelector(`input[name="${error.field}"]`);
            if (errorField) {
              errorField.focus();
              errorField.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
          }
        } 
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Sequelize –æ—à–∏–±–∫—É
        else if (error.name === 'SequelizeUniqueConstraintError' && error.errors && error.errors.length > 0) {
          const fieldError = error.errors[0];
          console.error('üîç –û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:', fieldError);
          
          if (fieldError.path === 'email') {
            setFormError('–ë“±–ª email –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω. –ë–∞—Å“õ–∞ email –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑.');
            const emailField = document.querySelector('input[name="email"]');
            if (emailField) {
              emailField.focus();
            }
          } else if (fieldError.path === 'username') {
            setFormError('–ë“±–ª –ª–æ–≥–∏–Ω –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω. –ë–∞—Å“õ–∞ –ª–æ–≥–∏–Ω —Ç–∞“£–¥–∞“£—ã–∑.');
            const usernameField = document.querySelector('input[name="username"]');
            if (usernameField) {
              usernameField.focus();
            }
          } else {
            setFormError(`${fieldError.path} ”©—Ä—ñ—Å—ñ –±—ñ—Ä–µ–≥–µ–π –±–æ–ª—É—ã –∫–µ—Ä–µ–∫.`);
          }
        } 
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–≤–µ—Ç API
        else if (error.response && error.response.data) {
          const { data } = error.response;
          
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ Sequelize –æ—à–∏–±–∫—É
          if (data && data.name === 'SequelizeUniqueConstraintError' && data.errors && data.errors.length > 0) {
            const fieldError = data.errors[0];
            if (fieldError.path === 'email') {
              setFormError('–ë“±–ª email –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω. –ë–∞—Å“õ–∞ email –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑.');
              const emailField = document.querySelector('input[name="email"]');
              if (emailField) {
                emailField.focus();
              }
            } else if (fieldError.path === 'username') {
              setFormError('–ë“±–ª –ª–æ–≥–∏–Ω –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω. –ë–∞—Å“õ–∞ –ª–æ–≥–∏–Ω —Ç–∞“£–¥–∞“£—ã–∑.');
              const usernameField = document.querySelector('input[name="username"]');
              if (usernameField) {
                usernameField.focus();
              }
            } else {
              setFormError(`${fieldError.path} ”©—Ä—ñ—Å—ñ –±—ñ—Ä–µ–≥–µ–π –±–æ–ª—É—ã –∫–µ—Ä–µ–∫.`);
            }
          } 
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
          else if (typeof data === 'string') {
            setFormError(translateError(data));
          } 
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤ –æ—Ç–≤–µ—Ç–µ
          else if (data.error || data.message) {
            setFormError(translateError(data.error || data.message));
          } 
          // –û–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
          else {
            setFormError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã –∂–∞“£–∞—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—ñ–ø, “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
          }
        } 
        // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
        else {
          setFormError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã –∂–∞“£–∞—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—ñ–ø, “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
        }
      } 
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–æ–π
      else if (typeof error === 'string') {
        setFormError(translateError(error));
      } 
      // –î–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
      else {
        setFormError('–ë–µ–ª–≥—ñ—Å—ñ–∑ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. ”ò—Ä–µ–∫–µ—Ç—Ç—ñ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.');
      }
      
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (error.response) {
        console.error('Error status:', error.response.status);
        console.error('Error data:', error.response.data);
      }
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É —Ç–∞–∫–∂–µ —á–µ—Ä–µ–∑ Toast
      showError('–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∂–∞“£–∞—Ä—Ç—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã');
    } finally {
      setEditUserLoading(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleDeleteUser = async () => {
    try {
      if (!selectedUser) return;
      
      setLoading(true);
      const response = await adminUserService.deleteUser(selectedUser.id);
      
      if (response.success) {
        success(`–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã ${selectedUser.firstName} ${selectedUser.lastName} —Å”ô—Ç—Ç—ñ –∂–æ–π—ã–ª–¥—ã`);
        fetchUsers();
        setOpenDeleteDialog(false);
      }
    } catch (error) {
      console.error('‚ùå Error deleting user:', error);
      
      let errorMessage = '–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã';
      
      if (error.message) {
        errorMessage = error.message;
      } else if (error.response && error.response.data) {
        const { data } = error.response;
        if (typeof data === 'string') {
          errorMessage = translateError(data);
        } else if (data.error || data.message) {
          errorMessage = translateError(data.error || data.message);
        }
      }
      
      showError(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const openEditUserDialog = (user) => {
    setSelectedUser(user);
    setFormData({
      username: user.username,
      firstName: user.firstName,
      lastName: user.lastName,
      email: user.email,
      phoneNumber: user.phoneNumber || '',
      password: '',
      role: user.role,
      faculty: user.faculty || '',
      specialization: user.specialization || '',
      studentId: user.studentId || ''
    });
    setOpenEditDialog(true);
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ —É–¥–∞–ª–µ–Ω–∏—è
  const openDeleteUserDialog = (user) => {
    setSelectedUser(user);
    setOpenDeleteDialog(true);
  };

  // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
  const resetForm = () => {
    setFormData({
      username: '',
      firstName: '',
      lastName: '',
      email: '',
      phoneNumber: '',
      password: '',
      role: 'student',
      faculty: '',
      specialization: '',
      studentId: ''
    });
    setSelectedUser(null);
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getRoleColor = (role) => {
    switch (role) {
      case 'admin':
        return 'error';
      case 'student':
        return 'primary';
      default:
        return 'default';
    }
  };

  return (
    <Container maxWidth="lg">
      <PageHeader 
        title="–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä–¥—ã –±–∞—Å“õ–∞—Ä—É" 
        subtitle="–ñ“Ø–π–µ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä—ã–Ω “õ–∞—Ä–∞—É, “õ–æ—Å—É, ”©“£–¥–µ—É –∂”ô–Ω–µ –∂–æ—é"
      />

      <Paper elevation={3} sx={{ mb: 4, p: 2 }}>
        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
          <Typography variant="h6">–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä —Ç—ñ–∑—ñ–º—ñ</Typography>
          <Button 
            variant="contained" 
            color="primary" 
            startIcon={<AddIcon />}
            onClick={() => setOpenAddDialog(true)}
          >
            –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ–æ—Å—É
          </Button>
        </Box>

        <TableContainer>
          <Table sx={{ minWidth: 650 }} aria-label="users table">
            <TableHead>
              <TableRow>
                <TableCell>ID</TableCell>
                <TableCell>–ê—Ç—ã-–∂”©–Ω—ñ</TableCell>
                <TableCell>Email</TableCell>
                <TableCell>–†”©–ª—ñ</TableCell>
                <TableCell>–§–∞–∫—É–ª—å—Ç–µ—Ç</TableCell>
                <TableCell>–ú–∞–º–∞–Ω–¥—ã“õ</TableCell>
                <TableCell>”ò—Ä–µ–∫–µ—Ç—Ç–µ—Ä</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {loading ? (
                <TableRow>
                  <TableCell colSpan={7} align="center">–ñ“Ø–∫—Ç–µ–ª—É–¥–µ...</TableCell>
                </TableRow>
              ) : users.length === 0 ? (
                <TableRow>
                  <TableCell colSpan={7} align="center">–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã</TableCell>
                </TableRow>
              ) : (
                users
                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
                  .map((user) => (
                    <TableRow key={user.id}>
                      <TableCell>{user.id}</TableCell>
                      <TableCell>{user.firstName} {user.lastName}</TableCell>
                      <TableCell>{user.email}</TableCell>
                      <TableCell>
                        <Chip 
                          label={user.role} 
                          color={getRoleColor(user.role)} 
                          size="small"
                        />
                      </TableCell>
                      <TableCell>{user.faculty}</TableCell>
                      <TableCell>{user.specialization}</TableCell>
                      <TableCell>
                        <IconButton 
                          aria-label="edit" 
                          color="primary"
                          onClick={() => openEditUserDialog(user)}
                        >
                          <EditIcon />
                        </IconButton>
                        <IconButton 
                          aria-label="delete" 
                          color="error"
                          onClick={() => openDeleteUserDialog(user)}
                        >
                          <DeleteIcon />
                        </IconButton>
                      </TableCell>
                    </TableRow>
                  ))
              )}
            </TableBody>
          </Table>
        </TableContainer>
        
        <TablePagination
          rowsPerPageOptions={[5, 10, 25]}
          component="div"
          count={users.length}
          rowsPerPage={rowsPerPage}
          page={page}
          onPageChange={handleChangePage}
          onRowsPerPageChange={handleChangeRowsPerPage}
          labelRowsPerPage="–ë–µ—Ç —Å–∞–π—ã–Ω:"
          labelDisplayedRows={({ from, to, count }) => `${from}-${to} –∏–∑ ${count}`}
        />
      </Paper>

      {/* –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <Dialog open={openAddDialog} onClose={() => { setOpenAddDialog(false); setFormError(''); }} maxWidth="md" fullWidth>
        <DialogTitle>–ñ–∞“£–∞ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ–æ—Å—É</DialogTitle>
        <DialogContent>
          {formError && (
            <Alert 
              severity="error" 
              sx={{ mt: 2, mb: 2 }}
              variant={formError.includes('email') ? "filled" : "standard"}
            >
              <AlertTitle sx={{ fontWeight: 600 }}>
                {formError.includes('email') 
                  ? 'Email “õ–∞—Ç–µ—Å—ñ: Email –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω' 
                  : formError.includes('–ª–æ–≥–∏–Ω') 
                    ? '–õ–æ–≥–∏–Ω “õ–∞—Ç–µ—Å—ñ: –õ–æ–≥–∏–Ω –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω'
                    : '–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ“±—Ä—É “õ–∞—Ç–µ—Å—ñ'}
              </AlertTitle>
              <Typography sx={{ mb: 1 }} variant="body1">
                {formError}
              </Typography>
              {formError.includes('email') && (
                <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', bgcolor: 'rgba(255, 255, 255, 0.15)', p: 1, borderRadius: 1 }}>
                  <WarningIcon fontSize="small" sx={{ mr: 1, color: theme.palette.warning.light }} />
                  <Typography variant="body2">
                    <strong>–®–µ—à—ñ–º:</strong> –ë–∞—Å“õ–∞ email –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑.
                  </Typography>
                </Box>
              )}
              {formError.includes('–ª–æ–≥–∏–Ω') && (
                <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', bgcolor: 'rgba(255, 255, 255, 0.15)', p: 1, borderRadius: 1 }}>
                  <WarningIcon fontSize="small" sx={{ mr: 1, color: theme.palette.warning.light }} />
                  <Typography variant="body2">
                    <strong>–®–µ—à—ñ–º:</strong> –ë–∞—Å“õ–∞ –ª–æ–≥–∏–Ω —Ç–∞“£–¥–∞“£—ã–∑ –Ω–µ–º–µ—Å–µ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑.
                  </Typography>
                </Box>
              )}
            </Alert>
          )}
          <Grid container spacing={2} sx={{ mt: 1 }}>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–õ–æ–≥–∏–Ω"
                name="username"
                value={formData.username}
                onChange={handleFormChange}
                required
                error={formError && formError.includes('–ª–æ–≥–∏–Ω')}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="“ö“±–ø–∏—è —Å”©–∑"
                name="password"
                type="password"
                value={formData.password}
                onChange={handleFormChange}
                required
                error={formError && formError.includes('“õ“±–ø–∏—è —Å”©–∑')}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–ê—Ç—ã"
                name="firstName"
                value={formData.firstName}
                onChange={handleFormChange}
                required
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–¢–µ–≥—ñ"
                name="lastName"
                value={formData.lastName}
                onChange={handleFormChange}
                required
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="Email"
                name="email"
                type="email"
                value={formData.email}
                onChange={handleFormChange}
                required
                error={formError && formError.includes('email')}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                name="phoneNumber"
                value={formData.phoneNumber}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                select
                label="–†”©–ª—ñ"
                name="role"
                value={formData.role}
                onChange={handleFormChange}
              >
                <MenuItem value="student">–°—Ç—É–¥–µ–Ω—Ç</MenuItem>
                <MenuItem value="admin">”ò–∫—ñ–º—à—ñ</MenuItem>
              </TextField>
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–§–∞–∫—É–ª—å—Ç–µ—Ç"
                name="faculty"
                value={formData.faculty}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–ú–∞–º–∞–Ω–¥—ã“õ"
                name="specialization"
                value={formData.specialization}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–°—Ç—É–¥–µ–Ω—Ç ID"
                name="studentId"
                value={formData.studentId}
                onChange={handleFormChange}
              />
            </Grid>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button 
            onClick={() => { 
              setOpenAddDialog(false); 
              setFormError(''); 
            }}
            disabled={addUserLoading}
          >
            –ë–∞—Å —Ç–∞—Ä—Ç—É
          </Button>
          <Button 
            onClick={handleAddUser} 
            variant="contained" 
            color="primary"
            disabled={addUserLoading}
          >
            {addUserLoading ? '“ö–æ—Å—ã–ª—É–¥–∞...' : '“ö–æ—Å—É'}
          </Button>
        </DialogActions>
      </Dialog>

      {/* –î–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <Dialog open={openEditDialog} onClose={() => { setOpenEditDialog(false); setFormError(''); }} maxWidth="md" fullWidth>
        <DialogTitle>–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã ”©“£–¥–µ—É</DialogTitle>
        <DialogContent>
          {formError && (
            <Alert 
              severity="error" 
              sx={{ mt: 2, mb: 2 }}
              variant={formError.includes('email') ? "filled" : "standard"}
            >
              <AlertTitle sx={{ fontWeight: 600 }}>
                {formError.includes('email') 
                  ? 'Email “õ–∞—Ç–µ—Å—ñ: Email –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω' 
                  : formError.includes('–ª–æ–≥–∏–Ω') || formError.includes('username')
                    ? '–õ–æ–≥–∏–Ω “õ–∞—Ç–µ—Å—ñ: –õ–æ–≥–∏–Ω –±“±—Ä—ã–Ω–Ω–∞–Ω —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω'
                    : '–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã ”©“£–¥–µ—É “õ–∞—Ç–µ—Å—ñ'}
              </AlertTitle>
              <Typography sx={{ mb: 1 }} variant="body1">
                {formError}
              </Typography>
              {formError.includes('email') && (
                <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', bgcolor: 'rgba(255, 255, 255, 0.15)', p: 1, borderRadius: 1 }}>
                  <WarningIcon fontSize="small" sx={{ mr: 1, color: theme.palette.warning.light }} />
                  <Typography variant="body2">
                    <strong>–®–µ—à—ñ–º:</strong> –ë–∞—Å“õ–∞ email –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑.
                  </Typography>
                </Box>
              )}
              {(formError.includes('–ª–æ–≥–∏–Ω') || formError.includes('username')) && (
                <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', bgcolor: 'rgba(255, 255, 255, 0.15)', p: 1, borderRadius: 1 }}>
                  <WarningIcon fontSize="small" sx={{ mr: 1, color: theme.palette.warning.light }} />
                  <Typography variant="body2">
                    <strong>–®–µ—à—ñ–º:</strong> –ë–∞—Å“õ–∞ –ª–æ–≥–∏–Ω —Ç–∞“£–¥–∞“£—ã–∑ –Ω–µ–º–µ—Å–µ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑.
                  </Typography>
                </Box>
              )}
            </Alert>
          )}
          <Grid container spacing={2} sx={{ mt: 1 }}>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–õ–æ–≥–∏–Ω"
                name="username"
                value={formData.username}
                onChange={handleFormChange}
                required
                error={formError && (formError.includes('–ª–æ–≥–∏–Ω') || formError.includes('username'))}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–ñ–∞“£–∞ “õ“±–ø–∏—è —Å”©–∑ (”©–∑–≥–µ—Ä—Ç–ø–µ—É “Ø—à—ñ–Ω –±–æ—Å “õ–∞–ª–¥—ã—Ä—ã“£—ã–∑)"
                name="password"
                type="password"
                value={formData.password}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–ê—Ç—ã"
                name="firstName"
                value={formData.firstName}
                onChange={handleFormChange}
                required
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–¢–µ–≥—ñ"
                name="lastName"
                value={formData.lastName}
                onChange={handleFormChange}
                required
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="Email"
                name="email"
                type="email"
                value={formData.email}
                onChange={handleFormChange}
                required
                error={formError && formError.includes('email')}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                name="phoneNumber"
                value={formData.phoneNumber}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                select
                label="–†”©–ª—ñ"
                name="role"
                value={formData.role}
                onChange={handleFormChange}
              >
                <MenuItem value="student">–°—Ç—É–¥–µ–Ω—Ç</MenuItem>
                <MenuItem value="admin">”ò–∫—ñ–º—à—ñ</MenuItem>
              </TextField>
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–§–∞–∫—É–ª—å—Ç–µ—Ç"
                name="faculty"
                value={formData.faculty}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–ú–∞–º–∞–Ω–¥—ã“õ"
                name="specialization"
                value={formData.specialization}
                onChange={handleFormChange}
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                label="–°—Ç—É–¥–µ–Ω—Ç ID"
                name="studentId"
                value={formData.studentId}
                onChange={handleFormChange}
              />
            </Grid>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button 
            onClick={() => { 
              setOpenEditDialog(false); 
              setFormError(''); 
            }}
            disabled={editUserLoading}
          >
            –ë–∞—Å —Ç–∞—Ä—Ç—É
          </Button>
          <Button 
            onClick={handleEditUser} 
            variant="contained" 
            color="primary"
            disabled={editUserLoading}
          >
            {editUserLoading ? '–°–∞“õ—Ç–∞–ª—É–¥–∞...' : '–°–∞“õ—Ç–∞—É'}
          </Button>
        </DialogActions>
      </Dialog>

      {/* –î–∏–∞–ª–æ–≥ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <Dialog
        open={openDeleteDialog}
        onClose={() => setOpenDeleteDialog(false)}
        aria-labelledby="alert-dialog-title"
        aria-describedby="alert-dialog-description"
      >
        <DialogTitle id="alert-dialog-title">–ñ–æ—é–¥—ã —Ä–∞—Å—Ç–∞—É</DialogTitle>
        <DialogContent>
          <DialogContentText id="alert-dialog-description">
            {selectedUser?.name} –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã—Å—ã–Ω –∂–æ—é“ì–∞ —Å–µ–Ω—ñ–º–¥—ñ—Å—ñ–∑ –±–µ? –ë“±–ª ”ô—Ä–µ–∫–µ—Ç—Ç—ñ –±–æ–ª–¥—ã—Ä–º–∞—É –º“Ø–º–∫—ñ–Ω –µ–º–µ—Å.
          </DialogContentText>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenDeleteDialog(false)}>–ë–∞—Å —Ç–∞—Ä—Ç—É</Button>
          <Button onClick={handleDeleteUser} color="error" autoFocus>
            –ñ–æ—é
          </Button>
        </DialogActions>
      </Dialog>
    </Container>
  );
};

export default UsersPage;