// src/services/adminBookService.js
import apiClient from './api';
import { translateError } from '../utils/errorMessages';

/**
 * ”ò–∫—ñ–º—à—ñ “Ø—à—ñ–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –±–∞—Å“õ–∞—Ä—É “õ—ã–∑–º–µ—Ç—ñ
 */
const adminBookService = {
  /**
   * –ë–∞—Ä–ª—ã“õ –∫—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –∞–ª—É
   * @param {Object} params - –°“±—Ä–∞–Ω—ã—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ (–±–µ—Ç—Ç–µ—É, —Å“Ø–∑—É)
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  getBooks: async (params = {}) => {
    try {
      console.log('üìö –ö—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ:', params);
      const response = await apiClient.get('/books', { params });
      console.log('‚úÖ –ö—ñ—Ç–∞–ø—Ç–∞—Ä —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ:', response.data.data ? `${response.data.data.length} –∫—ñ—Ç–∞–ø` : response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå –ö—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ:', error);
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
      }
      
      throw { 
        success: false, 
        message: translateError(error) || '–ö—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ' 
      };
    }
  },

  /**
   * –ë–∞—Ä–ª—ã“õ —Å–∞–Ω–∞—Ç—Ç–∞—Ä–¥—ã –∞–ª—É
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  getCategories: async () => {
    try {
      console.log('üìö –ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É');
      const response = await apiClient.get('/books/categories');
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ:', response.data.data ? `${response.data.data.length} –∫–∞—Ç–µ–≥–æ—Ä–∏—è` : response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ:', error);
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
      }
      
      throw { 
        success: false, 
        message: translateError(error) || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ' 
      };
    }
  },

  /**
   * –ñ–∞“£–∞ –∫—ñ—Ç–∞–ø –∂–∞—Å–∞—É
   * @param {Object} bookData - –ö—ñ—Ç–∞–ø –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  createBook: async (bookData) => {
    try {
      console.log('üìö –ñ–∞“£–∞ –∫—ñ—Ç–∞–ø –∂–∞—Å–∞—É –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ:', bookData);
      
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
      const requiredFields = [
        { field: 'title', label: '–ö—ñ—Ç–∞–ø—Ç—ã“£ –∞—Ç–∞—É—ã' },
        { field: 'author', label: '–ê–≤—Ç–æ—Ä' },
        { field: 'categoryId', label: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' },
        { field: 'description', label: '–°–∏–ø–∞—Ç—Ç–∞–º–∞' },
        { field: 'publishYear', label: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã' },
        { field: 'language', label: '–¢—ñ–ª' }
      ];
      
      const missingFields = requiredFields.filter(({ field }) => 
        !bookData[field] || bookData[field] === ''
      );
      
      if (missingFields.length > 0) {
        console.error('‚ùå –ñ–æ“õ –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å—Ç–µ—Ä:', missingFields.map(f => f.label).join(', '));
        throw { 
          success: false, 
          message: '–ë–∞—Ä–ª—ã“õ –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑',
          validationErrors: missingFields.map(f => ({ field: f.field, message: `${f.label} –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å` }))
        };
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
      if (bookData.publishYear && isNaN(parseInt(bookData.publishYear))) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂—ã–ª —Ñ–æ—Ä–º–∞—Ç—ã:', bookData.publishYear);
        throw { 
          success: false,
          message: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'publishYear', message: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      if (isNaN(parseInt(bookData.totalCopies)) || parseInt(bookData.totalCopies) < 0) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂–∞–ª–ø—ã –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã:', bookData.totalCopies);
        throw {
          success: false,
          message: '–î–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'totalCopies', message: '–î–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      if (bookData.availableCopies && (isNaN(parseInt(bookData.availableCopies)) || parseInt(bookData.availableCopies) < 0)) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã:', bookData.availableCopies);
        throw {
          success: false,
          message: '“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'availableCopies', message: '“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      // –û—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —á–∏—Å–µ–ª –≤ —á–∏—Å–ª–∞
      const cleanedData = { ...bookData };
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤ (1000 –∏ –º–µ–Ω–µ–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞)
      if (cleanedData.publishYear) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫—Ä–æ–º–µ –ø—Ä–æ–±–µ–ª–æ–≤
        const yearString = String(cleanedData.publishYear).trim();
        if (/^\d+$/.test(yearString)) {
          const yearValue = parseInt(yearString, 10);
          
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –≥–æ–¥–æ–≤
          const currentYear = new Date().getFullYear();
          if (yearValue < 1000 || yearValue > currentYear) {
            console.error(`‚ùå –ñ—ã–ª —Ä“±“õ—Å–∞—Ç –µ—Ç—ñ–ª–≥–µ–Ω –¥–∏–∞–ø–∞–∑–æ–Ω–Ω–∞–Ω —Ç—ã—Å: ${yearValue}`);
            throw { 
              success: false,
              message: `–ñ–∞—Ä–∞–º–¥—ã –∂—ã–ª –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (1000-${currentYear} –∞—Ä–∞–ª—ã“ì—ã–Ω–¥–∞)`,
              validationErrors: [{ field: 'publishYear', message: `–ñ—ã–ª 1000-${currentYear} –∞—Ä–∞–ª—ã“ì—ã–Ω–¥–∞ –±–æ–ª—É—ã –∫–µ—Ä–µ–∫` }]
            };
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ publicationYear –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –º–æ–¥–µ–ª—å—é
          cleanedData.publicationYear = yearValue;
          console.log(`‚úÖ –ñ—ã–ª —Å”ô—Ç—Ç—ñ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—ñ–ª–¥—ñ: ${yearString} ‚Üí ${yearValue}`);
          
          // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ publishYear, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
          delete cleanedData.publishYear;
        } else {
          console.error(`‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂—ã–ª —Ñ–æ—Ä–º–∞—Ç—ã, —Å–∞–Ω –µ–º–µ—Å —Ç–∞“£–±–∞–ª–∞—Ä —Ç–∞–±—ã–ª–¥—ã: "${yearString}"`);
          throw { 
            success: false,
            message: '–ñ–∞—Ä–∞–º–¥—ã –∂—ã–ª –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑. –¢–µ–∫ —Å–∞–Ω–¥–∞—Ä–¥—ã –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑.',
            validationErrors: [{ field: 'publishYear', message: '–ñ—ã–ª–¥–∞ —Ç–µ–∫ —Å–∞–Ω–¥–∞—Ä –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
          };
        }
      }
      
      if (cleanedData.totalCopies) {
        cleanedData.totalCopies = parseInt(cleanedData.totalCopies, 10);
      }
      
      if (cleanedData.availableCopies) {
        cleanedData.availableCopies = parseInt(cleanedData.availableCopies, 10);
      }
      
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      console.log('üì§ –°–µ—Ä–≤–µ—Ä–≥–µ –∂—ñ–±–µ—Ä—ñ–ª–µ—Ç—ñ–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä:', JSON.stringify(cleanedData, null, 2));
      
      const response = await apiClient.post('/books', cleanedData);
      console.log('‚úÖ –ö—ñ—Ç–∞–ø —Å”ô—Ç—Ç—ñ “õ“±—Ä—ã–ª–¥—ã:', response.data);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      const book = response.data.data || response.data;
      return { 
        success: true, 
        data: {
          // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ id –∫–Ω–∏–≥–∏ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–∫–∏
          id: book.id || response.data.id,
          ...book
        } 
      };
    } catch (error) {
      console.error('‚ùå –ö—ñ—Ç–∞–ø –∂–∞—Å–∞—É “õ–∞—Ç–µ—Å—ñ:', error);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —É–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–º —Ñ–æ—Ä–º–∞—Ç–µ
      if (error.success === false) {
        return error;
      }
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`‚ùå –°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
        if (status === 400 && data && data.errors) {
          console.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è “õ–∞—Ç–µ–ª–µ—Ä—ñ:', data.errors);
          
          const validationErrors = Array.isArray(data.errors) 
            ? data.errors
            : [{ message: '–ö—ñ—Ç–∞–ø –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ –∂–∞—Ä–∞–º—Å—ã–∑' }];
          
          // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          console.error('‚ùå –¢“Ø–∑–µ—Ç—É–ª–µ—Ä “õ–∞–∂–µ—Ç ”©—Ä—ñ—Å—Ç–µ—Ä:');
          validationErrors.forEach(err => {
            console.error(`   - ${err.field || '–ñ–∞–ª–ø—ã “õ–∞—Ç–µ'}: ${err.msg || err.message}`);
          });
          
          return { 
            success: false, 
            message: validationErrors.map(err => err.msg || err.message).join('. '),
            validationErrors: data.errors
          };
        }
        
        // –î—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—É—Å—ã –æ—à–∏–±–æ–∫
        if (status === 401) {
          return { 
            success: false, 
            message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ. “ö–∞–π—Ç–∞ –∫—ñ—Ä—ñ“£—ñ–∑.' 
          };
        }
        
        if (status === 403) {
          return { 
            success: false, 
            message: '–ö—ñ—Ç–∞–ø –∂–∞—Å–∞—É“ì–∞ —Ä“±“õ—Å–∞—Ç—ã“£—ã–∑ –∂–æ“õ' 
          };
        }
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–ö—ñ—Ç–∞–ø—Ç—ã –∂–∞—Å–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –ö—ñ—Ç–∞–ø—Ç—ã –∂–∞“£–∞—Ä—Ç—É
   * @param {string} id - –ö—ñ—Ç–∞–ø –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @param {Object} bookData - –ñ–∞“£–∞—Ä—Ç—ã–ª“ì–∞–Ω –∫—ñ—Ç–∞–ø –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  updateBook: async (id, bookData) => {
    try {
      console.log(`üìö ID: ${id} –∫—ñ—Ç–∞–ø—Ç—ã –∂–∞“£–∞—Ä—Ç—É:`, bookData);
      
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
      const requiredFields = [
        { field: 'title', label: '–ö—ñ—Ç–∞–ø—Ç—ã“£ –∞—Ç–∞—É—ã' },
        { field: 'author', label: '–ê–≤—Ç–æ—Ä' },
        { field: 'categoryId', label: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' },
        { field: 'description', label: '–°–∏–ø–∞—Ç—Ç–∞–º–∞' },
        { field: 'publishYear', label: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã' },
        { field: 'language', label: '–¢—ñ–ª' }
      ];
      
      const missingFields = requiredFields.filter(({ field }) => 
        !bookData[field] || bookData[field] === ''
      );
      
      if (missingFields.length > 0) {
        console.error('‚ùå –ñ–æ“õ –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å—Ç–µ—Ä:', missingFields.map(f => f.label).join(', '));
        throw { 
          success: false, 
          message: '–ë–∞—Ä–ª—ã“õ –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑',
          validationErrors: missingFields.map(f => ({ field: f.field, message: `${f.label} –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å` }))
        };
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
      if (bookData.publishYear && isNaN(parseInt(bookData.publishYear))) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂—ã–ª —Ñ–æ—Ä–º–∞—Ç—ã:', bookData.publishYear);
        throw { 
          success: false,
          message: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'publishYear', message: '–ë–∞—Å—ã–ª—ã–º –∂—ã–ª—ã —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      if (bookData.totalCopies && (isNaN(parseInt(bookData.totalCopies)) || parseInt(bookData.totalCopies) < 0)) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂–∞–ª–ø—ã –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã:', bookData.totalCopies);
        throw {
          success: false,
          message: '–î–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'totalCopies', message: '–î–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      if (bookData.availableCopies && (isNaN(parseInt(bookData.availableCopies)) || parseInt(bookData.availableCopies) < 0)) {
        console.error('‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã:', bookData.availableCopies);
        throw {
          success: false,
          message: '“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫',
          validationErrors: [{ field: 'availableCopies', message: '“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –¥–∞–Ω–∞–ª–∞—Ä —Å–∞–Ω—ã –æ“£ —Å–∞–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
        };
      }
      
      // –û—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —á–∏—Å–µ–ª –≤ —á–∏—Å–ª–∞
      const cleanedData = { ...bookData };
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤ (1000 –∏ –º–µ–Ω–µ–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞)
      if (cleanedData.publishYear) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫—Ä–æ–º–µ –ø—Ä–æ–±–µ–ª–æ–≤
        const yearString = String(cleanedData.publishYear).trim();
        if (/^\d+$/.test(yearString)) {
          const yearValue = parseInt(yearString, 10);
          
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –≥–æ–¥–æ–≤
          const currentYear = new Date().getFullYear();
          if (yearValue < 1000 || yearValue > currentYear) {
            console.error(`‚ùå –ñ—ã–ª —Ä“±“õ—Å–∞—Ç –µ—Ç—ñ–ª–≥–µ–Ω –¥–∏–∞–ø–∞–∑–æ–Ω–Ω–∞–Ω —Ç—ã—Å: ${yearValue}`);
            throw { 
              success: false,
              message: `–ñ–∞—Ä–∞–º–¥—ã –∂—ã–ª –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (1000-${currentYear} –∞—Ä–∞–ª—ã“ì—ã–Ω–¥–∞)`,
              validationErrors: [{ field: 'publishYear', message: `–ñ—ã–ª 1000-${currentYear} –∞—Ä–∞–ª—ã“ì—ã–Ω–¥–∞ –±–æ–ª—É—ã –∫–µ—Ä–µ–∫` }]
            };
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ publicationYear –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –º–æ–¥–µ–ª—å—é
          cleanedData.publicationYear = yearValue;
          console.log(`‚úÖ –ñ—ã–ª —Å”ô—Ç—Ç—ñ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—ñ–ª–¥—ñ: ${yearString} ‚Üí ${yearValue}`);
          
          // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ publishYear, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
          delete cleanedData.publishYear;
        } else {
          console.error(`‚ùå –ñ–∞—Ä–∞–º—Å—ã–∑ –∂—ã–ª —Ñ–æ—Ä–º–∞—Ç—ã, —Å–∞–Ω –µ–º–µ—Å —Ç–∞“£–±–∞–ª–∞—Ä —Ç–∞–±—ã–ª–¥—ã: "${yearString}"`);
          throw { 
            success: false,
            message: '–ñ–∞—Ä–∞–º–¥—ã –∂—ã–ª –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑. –¢–µ–∫ —Å–∞–Ω–¥–∞—Ä–¥—ã –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑.',
            validationErrors: [{ field: 'publishYear', message: '–ñ—ã–ª–¥–∞ —Ç–µ–∫ —Å–∞–Ω–¥–∞—Ä –±–æ–ª—É—ã –∫–µ—Ä–µ–∫' }]
          };
        }
      }
      
      if (cleanedData.totalCopies) {
        cleanedData.totalCopies = parseInt(cleanedData.totalCopies, 10);
      }
      
      if (cleanedData.availableCopies) {
        cleanedData.availableCopies = parseInt(cleanedData.availableCopies, 10);
      }
      
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      console.log('üì§ –°–µ—Ä–≤–µ—Ä–≥–µ –∂—ñ–±–µ—Ä—ñ–ª–µ—Ç—ñ–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä:', JSON.stringify(cleanedData, null, 2));
      
      const response = await apiClient.put(`/books/${id}`, cleanedData);
      console.log('‚úÖ –ö—ñ—Ç–∞–ø —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå –ö—ñ—Ç–∞–ø –∂–∞“£–∞—Ä—Ç—É “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —É–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–º —Ñ–æ—Ä–º–∞—Ç–µ
      if (error.success === false) {
        return error;
      }
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`‚ùå –ö—ñ—Ç–∞–ø –∂–∞“£–∞—Ä—Ç—É “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
        
        // 404 ”©“£–¥–µ—É - –∫—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã
        if (status === 404) {
          return { 
            success: false, 
            message: '–ö—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã. –ë–µ—Ç—Ç–µ–≥—ñ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –µ—Å–∫—ñ—Ä–≥–µ–Ω –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω.' 
          };
        }
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è “õ–∞—Ç–µ–ª–µ—Ä—ñ–Ω ”©“£–¥–µ—É
        if (status === 400 && data && data.errors) {
          console.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è “õ–∞—Ç–µ–ª–µ—Ä—ñ:', data.errors);
          
          const validationErrors = Array.isArray(data.errors) 
            ? data.errors
            : [{ message: '–ö—ñ—Ç–∞–ø –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ –∂–∞—Ä–∞–º—Å—ã–∑' }];
          
          // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          console.error('‚ùå –¢“Ø–∑–µ—Ç—É–ª–µ—Ä “õ–∞–∂–µ—Ç ”©—Ä—ñ—Å—Ç–µ—Ä:');
          validationErrors.forEach(err => {
            console.error(`   - ${err.field || '–ñ–∞–ª–ø—ã “õ–∞—Ç–µ'}: ${err.msg || err.message}`);
          });
          
          return { 
            success: false, 
            message: validationErrors.map(err => err.msg || err.message).join('. '),
            validationErrors: data.errors
          };
        }
        
        // –î—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—É—Å—ã –æ—à–∏–±–æ–∫
        if (status === 401) {
          return { 
            success: false, 
            message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ. “ö–∞–π—Ç–∞ –∫—ñ—Ä—ñ“£—ñ–∑.' 
          };
        }
        
        if (status === 403) {
          return { 
            success: false, 
            message: '–ö—ñ—Ç–∞–ø—Ç—ã –∂–∞“£–∞—Ä—Ç—É“ì–∞ —Ä“±“õ—Å–∞—Ç—ã“£—ã–∑ –∂–æ“õ' 
          };
        }
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–ö—ñ—Ç–∞–ø—Ç—ã –∂–∞“£–∞—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –ö—ñ—Ç–∞–ø—Ç—ã –∂–æ—é
   * @param {string} id - –ö—ñ—Ç–∞–ø –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  deleteBook: async (id) => {
    try {
      console.log(`üìö ID: ${id} –∫—ñ—Ç–∞–ø—Ç—ã –∂–æ—é`);
      const response = await apiClient.delete(`/books/${id}`);
      console.log('‚úÖ –ö—ñ—Ç–∞–ø —Å”ô—Ç—Ç—ñ –∂–æ–π—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå –ö—ñ—Ç–∞–ø –∂–æ—é “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`‚ùå –ö—ñ—Ç–∞–ø –∂–æ—é “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
        
        // 404 ”©“£–¥–µ—É - –∫—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã
        if (status === 404) {
          return { 
            success: false, 
            message: '–ö—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã. –ë–µ—Ç—Ç–µ–≥—ñ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –µ—Å–∫—ñ—Ä–≥–µ–Ω –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω.' 
          };
        }
        
        // 403 ”©“£–¥–µ—É - —Ä“±“õ—Å–∞—Ç—Å—ã–∑
        if (status === 403) {
          return { 
            success: false, 
            message: '–ë“±–ª –∫—ñ—Ç–∞–ø—Ç—ã –∂–æ—é“ì–∞ —Ä“±“õ—Å–∞—Ç—ã“£—ã–∑ –∂–æ“õ.' 
          };
        }
        
        // 409 ”©“£–¥–µ—É - “õ–∞—Ä—ã–∑ –∞–ª—É—à—ã–ª–∞—Ä –±–∞—Ä
        if (status === 409) {
          return { 
            success: false, 
            message: '–ë“±–ª –∫—ñ—Ç–∞–ø “õ–∞–∑—ñ—Ä “õ–∞—Ä—ã–∑–¥–∞. –ö—ñ—Ç–∞–ø—Ç—ã –∂–æ—é –∞–ª–¥—ã–Ω–¥–∞ –±–∞—Ä–ª—ã“õ “õ–∞—Ä—ã–∑–¥–∞—Ä “õ–∞–π—Ç–∞—Ä—ã–ª—É—ã –∫–µ—Ä–µ–∫.' 
          };
        }
        
        // 401 - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ
        if (status === 401) {
          return {
            success: false,
            message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ. “ö–∞–π—Ç–∞ –∫—ñ—Ä—ñ“£—ñ–∑.'
          };
        }
        
        // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
        return {
          success: false, 
          message: data?.message || data?.error || '–ö—ñ—Ç–∞–ø—Ç—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ —Å–µ—Ä–≤–µ—Ä–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã',
          status: status
        };
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–ö—ñ—Ç–∞–ø—Ç—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –ö—ñ—Ç–∞–ø –º“±“õ–∞–±–∞—Å—ã–Ω –∂“Ø–∫—Ç–µ—É
   * @param {string} id - –ö—ñ—Ç–∞–ø –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @param {File} file - –ú“±“õ–∞–±–∞ —Ñ–∞–π–ª—ã
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  uploadBookCover: async (id, file) => {
    try {
      console.log(`üìö ID: ${id} –∫—ñ—Ç–∞–ø –º“±“õ–∞–±–∞—Å—ã–Ω –∂“Ø–∫—Ç–µ—É. –§–∞–π–ª: ${file.name}, ”©–ª—à–µ–º—ñ: ${file.size} –±–∞–π—Ç, —Ç–∏–ø—ñ: ${file.type}`);
      console.log(`üìÇ –õ–æ–∫–∞–ª—å–¥—ã —Å–∞“õ—Ç–∞—É —Ä–µ–∂–∏–º—ñ: –ò”ô (”ô—Ä“õ–∞—à–∞–Ω –ª–æ–∫–∞–ª—å–¥—ã —Å–∞“õ—Ç–∞–ª–∞–¥—ã)`);
      
      // –§–∞–π–ª —Ç–∏–ø—ñ–Ω —Ç–µ–∫—Å–µ—Ä—É
      if (!file.type.startsWith('image/')) {
        console.error('‚ùå –§–∞–π–ª —Ç–∏–ø—ñ –∂–∞—Ä–∞–º—Å—ã–∑:', file.type);
        return { 
          success: false, 
          message: '–¢–µ–∫ —Å—É—Ä–µ—Ç —Ñ–∞–π–ª–¥–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É–≥–µ —Ä“±“õ—Å–∞—Ç –µ—Ç—ñ–ª–≥–µ–Ω (JPEG, PNG, GIF)'
        };
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
      const allowedExtensions = ['jpg', 'jpeg', 'png', 'gif'];
      const fileExtension = file.name.split('.').pop().toLowerCase();
      if (!allowedExtensions.includes(fileExtension)) {
        console.error('‚ùå –§–∞–π–ª –∫–µ“£–µ–π—Ç—ñ–º—ñ –∂–∞—Ä–∞–º—Å—ã–∑:', fileExtension);
        return { 
          success: false, 
          message: `–ñ–∞—Ä–∞–º—Å—ã–∑ —Ñ–∞–π–ª –∫–µ“£–µ–π—Ç—ñ–º—ñ: ${fileExtension}. –¢–µ–∫ ${allowedExtensions.join(', ')} —Ñ–æ—Ä–º–∞—Ç—Ç–∞—Ä—ã —Ä“±“õ—Å–∞—Ç –µ—Ç—ñ–ª–≥–µ–Ω`
        };
      }
      
      // –§–∞–π–ª ”©–ª—à–µ–º—ñ–Ω —Ç–µ–∫—Å–µ—Ä—É - 5MB —à–µ–∫—Ç–µ—É
      if (file.size > 5 * 1024 * 1024) {
        console.error('‚ùå –§–∞–π–ª ”©–ª—à–µ–º—ñ —Ç—ã–º “Ø–ª–∫–µ–Ω:', (file.size / (1024 * 1024)).toFixed(2) + 'MB');
        return { 
          success: false, 
          message: `–°—É—Ä–µ—Ç —Ñ–∞–π–ª—ã–Ω—ã“£ ”©–ª—à–µ–º—ñ 5MB-–¥–∞–Ω –∞—Å–ø–∞—É—ã –∫–µ—Ä–µ–∫. –°—ñ–∑–¥—ñ“£ —Ñ–∞–π–ª—ã“£—ã–∑: ${(file.size / (1024 * 1024)).toFixed(2)}MB`
        };
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
      const formData = new FormData();
      formData.append('file', file);
      
      // –í—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
      formData.append('storeLocally', 'true');
      
      // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
      console.log('üì§ –ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É —Å“±—Ä–∞–Ω—ã—Å—ã –∂—ñ–±–µ—Ä—ñ–ª—É–¥–µ...');
      
      const response = await apiClient.put(`/books/${id}/cover`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        },
        // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        onUploadProgress: (progressEvent) => {
          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);
          console.log(`üì§ –ñ“Ø–∫—Ç–µ—É “Ø—Ä–¥—ñ—Å—ñ: ${percentCompleted}%`);
        }
      });
      
      console.log('‚úÖ –ú“±“õ–∞–±–∞ —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå –ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —É–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–º —Ñ–æ—Ä–º–∞—Ç–µ
      if (error.success === false) {
        return error;
      }
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`‚ùå –ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
        
        // 404 ”©“£–¥–µ—É - –∫—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã
        if (status === 404) {
          return { 
            success: false, 
            message: '–ö—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã. –ë–µ—Ç—Ç–µ–≥—ñ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –µ—Å–∫—ñ—Ä–≥–µ–Ω –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω.' 
          };
        }
        
        // 400 - —Ñ–∞–π–ª —Ç–∏–ø—ñ –Ω–µ–º–µ—Å–µ ”©–ª—à–µ–º—ñ –∂–∞—Ä–∞–º—Å—ã–∑
        if (status === 400) {
          return { 
            success: false, 
            message: data.error || data.message || '–§–∞–π–ª —Ç–∏–ø—ñ –Ω–µ–º–µ—Å–µ ”©–ª—à–µ–º—ñ –∂–∞—Ä–∞–º—Å—ã–∑. JPG, PNG –Ω–µ–º–µ—Å–µ GIF —Ñ–æ—Ä–º–∞—Ç—ã–Ω–¥–∞“ì—ã 5MB-–¥–∞–Ω –∞—Å–ø–∞–π—Ç—ã–Ω —Å—É—Ä–µ—Ç –∂“Ø–∫—Ç–µ“£—ñ–∑.' 
          };
        }
        
        // 401 - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ
        if (status === 401) {
          return {
            success: false,
            message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è “õ–∞—Ç–µ—Å—ñ. “ö–∞–π—Ç–∞ –∫—ñ—Ä—ñ“£—ñ–∑.'
          };
        }
        
        // 403 - —Ä“±“õ—Å–∞—Ç –∂–æ“õ
        if (status === 403) {
          return {
            success: false,
            message: '–û—Å—ã –∫—ñ—Ç–∞–ø“õ–∞ –º“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É–≥–µ —Ä“±“õ—Å–∞—Ç—ã“£—ã–∑ –∂–æ“õ.'
          };
        }
        
        // 500 - —Å–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ
        if (status === 500) {
          return { 
            success: false, 
            message: '–ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ —Å–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ –æ—Ä—ã–Ω –∞–ª–¥—ã. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
          };
        }
        
        // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
        return {
          success: false, 
          message: data?.message || data?.error || '–ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ —Å–µ—Ä–≤–µ—Ä–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã',
          status: status
        };
      }
      
      // –î–ª—è —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)
      if (error.message && error.message.includes('Network Error')) {
        return {
          success: false,
          message: '–ñ–µ–ª—ñ “õ–∞—Ç–µ—Å—ñ. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–π–ª–∞–Ω—ã—Å—ã–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑ –∂”ô–Ω–µ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.'
        };
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –ö—ñ—Ç–∞–ø “õ–æ—Ä—ã–Ω –∂–∞“£–∞—Ä—Ç—É
   * @param {string} id - –ö—ñ—Ç–∞–ø –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @param {Object} data - “ö–æ—Ä –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  updateInventory: async (id, data) => {
    try {
      console.log(`üìö ID: ${id} –∫—ñ—Ç–∞–ø “õ–æ—Ä—ã–Ω –∂–∞“£–∞—Ä—Ç—É:`, data);
      const response = await apiClient.put(`/books/${id}/inventory`, data);
      console.log('‚úÖ “ö–æ—Ä —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå “ö–æ—Ä –∂–∞“£–∞—Ä—Ç—É “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      if (error.response) {
        const { status, data } = error.response;
        console.error(`‚ùå “ö–æ—Ä –∂–∞“£–∞—Ä—Ç—É “õ–∞—Ç–µ—Å—ñ: HTTP ${status}`, data);
        
        // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        if (status === 404) {
          return {
            success: false,
            message: '–ö—ñ—Ç–∞–ø —Ç–∞–±—ã–ª–º–∞–¥—ã'
          };
        }
        
        if (status === 400) {
          return {
            success: false,
            message: data?.message || '–ñ–∞—Ä–∞–º—Å—ã–∑ “õ–æ—Ä –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ. –û“£ —Å–∞–Ω–¥–∞—Ä–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.'
          };
        }
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–ö—ñ—Ç–∞–ø “õ–æ—Ä—ã–Ω –∂–∞“£–∞—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –ñ–∞“£–∞ —Å–∞–Ω–∞—Ç –∂–∞—Å–∞—É
   * @param {Object} categoryData - –°–∞–Ω–∞—Ç –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  createCategory: async (categoryData) => {
    try {
      console.log('üìö –ñ–∞“£–∞ —Å–∞–Ω–∞—Ç –∂–∞—Å–∞—É:', categoryData);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
      if (!categoryData.name) {
        return {
          success: false,
          message: '–°–∞–Ω–∞—Ç –∞—Ç–∞—É—ã –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å'
        };
      }
      
      const response = await apiClient.post('/books/categories', categoryData);
      console.log('‚úÖ –°–∞–Ω–∞—Ç —Å”ô—Ç—Ç—ñ “õ“±—Ä—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error('‚ùå –°–∞–Ω–∞—Ç –∂–∞—Å–∞—É “õ–∞—Ç–µ—Å—ñ:', error);
      
      if (error.response && error.response.status === 409) {
        return {
          success: false,
          message: '–ë“±–ª –∞—Ç–∞—É–º–µ–Ω —Å–∞–Ω–∞—Ç –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä. –ë–∞—Å“õ–∞ –∞—Ç–∞—É –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.'
        };
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–°–∞–Ω–∞—Ç –∂–∞—Å–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –°–∞–Ω–∞—Ç—Ç—ã –∂–∞“£–∞—Ä—Ç—É
   * @param {string} id - –°–∞–Ω–∞—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @param {Object} categoryData - –ñ–∞“£–∞—Ä—Ç—ã–ª“ì–∞–Ω —Å–∞–Ω–∞—Ç –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  updateCategory: async (id, categoryData) => {
    try {
      console.log(`üìö ID: ${id} —Å–∞–Ω–∞—Ç—Ç—ã –∂–∞“£–∞—Ä—Ç—É:`, categoryData);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
      if (!categoryData.name) {
        return {
          success: false,
          message: '–°–∞–Ω–∞—Ç –∞—Ç–∞—É—ã –º—ñ–Ω–¥–µ—Ç—Ç—ñ ”©—Ä—ñ—Å'
        };
      }
      
      const response = await apiClient.put(`/books/categories/${id}`, categoryData);
      console.log('‚úÖ –°–∞–Ω–∞—Ç —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå –°–∞–Ω–∞—Ç –∂–∞“£–∞—Ä—Ç—É “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      if (error.response) {
        const { status, data } = error.response;
        
        if (status === 404) {
          return {
            success: false,
            message: '–°–∞–Ω–∞—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã'
          };
        }
        
        if (status === 409) {
          return {
            success: false,
            message: '–ë“±–ª –∞—Ç–∞—É–º–µ–Ω —Å–∞–Ω–∞—Ç –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä. –ë–∞—Å“õ–∞ –∞—Ç–∞—É –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.'
          };
        }
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–°–∞–Ω–∞—Ç—Ç—ã –∂–∞“£–∞—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },

  /**
   * –°–∞–Ω–∞—Ç—Ç—ã –∂–æ—é
   * @param {string} id - –°–∞–Ω–∞—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  deleteCategory: async (id) => {
    try {
      console.log(`üìö ID: ${id} —Å–∞–Ω–∞—Ç—Ç—ã –∂–æ—é`);
      const response = await apiClient.delete(`/books/categories/${id}`);
      console.log('‚úÖ –°–∞–Ω–∞—Ç —Å”ô—Ç—Ç—ñ –∂–æ–π—ã–ª–¥—ã:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error(`‚ùå –°–∞–Ω–∞—Ç –∂–æ—é “õ–∞—Ç–µ—Å—ñ (ID: ${id}):`, error);
      
      if (error.response && error.response.status === 409) {
        return { 
          success: false, 
          message: '–ë“±–ª —Å–∞–Ω–∞—Ç“õ–∞ —Ç–∏–µ—Å—ñ–ª—ñ –∫—ñ—Ç–∞–ø—Ç–∞—Ä –±–∞—Ä. –°–∞–Ω–∞—Ç—Ç—ã –∂–æ—é –∞–ª–¥—ã–Ω–¥–∞ –±–∞—Ä–ª—ã“õ –∫—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –±–∞—Å“õ–∞ —Å–∞–Ω–∞—Ç—Ç–∞—Ä“ì–∞ –∞—É—ã—Å—Ç—ã—Ä—É –∫–µ—Ä–µ–∫.' 
        };
      }
      
      if (error.response && error.response.status === 404) {
        return {
          success: false,
          message: '–°–∞–Ω–∞—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã'
        };
      }
      
      return { 
        success: false, 
        message: translateError(error) || '–°–∞–Ω–∞—Ç—Ç—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.' 
      };
    }
  },
  
  /**
   * –°–∞–Ω–∞—Ç—Ç–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã–Ω –∞–ª—É
   * @returns {Promise} API –∂–∞—É–∞–±—ã - ”ô—Ä —Å–∞–Ω–∞—Ç—Ç–∞“ì—ã –∫—ñ—Ç–∞–ø—Ç–∞—Ä —Å–∞–Ω—ã
   */
  getCategoryStats: async () => {
    try {
      console.log('üìä –°–∞–Ω–∞—Ç—Ç–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã–Ω –∂“Ø–∫—Ç–µ—É');
      const response = await apiClient.get('/books/categories/stats');
      console.log('‚úÖ –°–∞–Ω–∞—Ç—Ç–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error('‚ùå –°–∞–Ω–∞—Ç—Ç–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã–Ω –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ:', error);
      return { 
        success: false, 
        message: translateError(error) || '–°–∞–Ω–∞—Ç—Ç–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã–Ω –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ' 
      };
    }
  },
  
  /**
   * –ï“£ –∫”©–ø “õ–∞—Ä—ã–∑“ì–∞ –∞–ª—ã–Ω“ì–∞–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä–¥—ã –∞–ª—É (—Ç—Ä–µ–Ω–¥—Ç–µ—Ä)
   * @param {number} limit - “ö–∞–π—Ç–∞—Ä—ã–ª–∞—Ç—ã–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä —Å–∞–Ω—ã
   * @returns {Promise} API –∂–∞—É–∞–±—ã
   */
  getTrendingBooks: async (limit = 5) => {
    try {
      console.log(`üìä –¢—Ä–µ–Ω–¥ –∫—ñ—Ç–∞–ø—Ç–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É (—à–µ–∫—Ç–µ—É: ${limit})`);
      const response = await apiClient.get('/books/trending', { params: { limit } });
      console.log('‚úÖ –¢—Ä–µ–Ω–¥ –∫—ñ—Ç–∞–ø—Ç–∞—Ä—ã —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ:', response.data);
      return { success: true, data: response.data.data || response.data };
    } catch (error) {
      console.error('‚ùå –¢—Ä–µ–Ω–¥ –∫—ñ—Ç–∞–ø—Ç–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ:', error);
      return { 
        success: false, 
        message: translateError(error) || '–¢—Ä–µ–Ω–¥ –∫—ñ—Ç–∞–ø—Ç–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É “õ–∞—Ç–µ—Å—ñ' 
      };
    }
  }
};

export default adminBookService;