// src/services/api.js
import axios from 'axios';
import apiDebugger from '../utils/apiDebugger';

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–æ–¥–∏–º –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API URL
console.log(`üåê API URL: ${API_URL}`);

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ axios —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const apiClient = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json'
  },
  // –í–∞–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤ –∏ CORS
  withCredentials: false,
  timeout: 30000 // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
apiClient.interceptors.request.use(
  (config) => {
    // –ï—Å–ª–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    if (config.headers['Authorization']) {
      return config;
    }
    
    // –ò–Ω–∞—á–µ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    const email = sessionStorage.getItem('email') || localStorage.getItem('email');
    const password = sessionStorage.getItem('userPassword') || localStorage.getItem('userPassword');
    
    if (email && password) {
      // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Basic Authentication
      config.headers['Authorization'] = 'Basic ' + btoa(`${email}:${password}`);
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      console.log(`üîë –ò—Å–ø–æ–ª—å–∑—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è ${email}`);
    }
    
    // –ù–µ –∏–∑–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Content-Type, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è multipart/form-data
    if (config.headers['Content-Type'] === 'multipart/form-data') {
      delete config.headers['Content-Type']; // –ü–æ–∑–≤–æ–ª–∏—Ç—å axios –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å boundary
    }
    
    // –î–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    if (config.url && config.url.includes('/cover') && config.method === 'put') {
      console.log('üì§ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞:', config.url);
    }
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    apiDebugger.logRequest(config.url, config.method, config.data);
    
    return config;
  },
  (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    return Promise.reject(error);
  }
);

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
apiClient.interceptors.response.use(
  (response) => {
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    apiDebugger.logResponse(response.config.url, response);
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–µ–∫
    if (response.config.url && response.config.url.includes('/cover') && response.status === 200) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±–ª–æ–∂–∫–∏:', response.data);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ URL –æ–±–ª–æ–∂–∫–∏
      if (response.data && response.data.data && response.data.data.cover) {
        console.log('üîó URL –æ–±–ª–æ–∂–∫–∏:', response.data.data.cover);
      }
    }
    
    return response;
  },
  (error) => {
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    apiDebugger.logError(error.config?.url || 'unknown endpoint', error);
    
    // –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (error.response) {
      if (error.response.status === 401) {
        console.warn('üîí –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ 401:', error.response.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
        const currentPath = window.location.pathname;
        if (currentPath !== '/login' && !currentPath.includes('/register')) {
          console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
          
          // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
          sessionStorage.removeItem('email');
          sessionStorage.removeItem('userPassword');
          localStorage.removeItem('email');
          localStorage.removeItem('userPassword');
          
          // –ë–æ–ª–µ–µ –º—è–≥–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
          setTimeout(() => {
            window.location.href = '/login';
          }, 100);
        }
      } else if (error.response.status === 403) {
        console.warn('üö´ –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ 403:', error.response.data);
      }
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±–ª–æ–∂–µ–∫
    if (error.config?.url && error.config.url.includes('/cover')) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±–ª–æ–∂–∫–∏:', error.message);
      
      if (error.response?.data) {
        console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
      }
    }
    
    return Promise.reject(error);
  }
);

export default apiClient;