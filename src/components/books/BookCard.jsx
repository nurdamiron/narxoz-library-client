/**
 * src/components/books/BookCard.jsx
 * 
 * –ñ–∞“õ—Å–∞—Ä—Ç—ã–ª“ì–∞–Ω –∫—ñ—Ç–∞–ø –∫–∞—Ä—Ç–æ—á–∫–∞—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ
 * 
 * –ë“±–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫—ñ—Ç–∞–ø—Ç—ã“£ —Ç–æ–ª—ã“õ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ–Ω –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç“Ø—Ä—ñ–Ω–¥–µ –∫”©—Ä—Å–µ—Ç–µ–¥—ñ.
 * –ê–Ω–∏–º–∞—Ü–∏—è–ª–∞—Ä, –º–∏–∫—Ä–æ–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∂”ô–Ω–µ –∫–µ“£–µ–π—Ç—ñ–ª–≥–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª “õ–æ—Å—ã–ª“ì–∞–Ω.
 */
import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { Link as RouterLink } from 'react-router-dom';
import {
  Card,
  CardActionArea,
  CardActions,
  CardContent,
  CardMedia,
  Typography,
  Box,
  IconButton,
  Chip,
  Button,
  Tooltip,
  Divider,
  useTheme,
  alpha,
  Skeleton,
  Collapse
} from '@mui/material';
import {
  BookmarkBorder as BookmarkBorderIcon,
  Bookmark as BookmarkIcon,
  ExpandMore as ExpandMoreIcon,
  ExpandLess as ExpandLessIcon,
  LocalLibrary as LocalLibraryIcon,
  VisibilityOff as VisibilityOffIcon,
  CalendarToday as CalendarIcon,
  Language as LanguageIcon,
  InfoOutlined as InfoIcon,
  BrokenImage as BrokenImageIcon
} from '@mui/icons-material';
import { motion } from 'framer-motion';
import { useTranslation } from 'react-i18next';

// –õ–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import BookRating from './BookRating';
import { getBookCoverUrl } from '../../utils';

/**
 * BookCard –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ
 * 
 * @param {Object} props - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ
 * @param {Object} props.book - –ö—ñ—Ç–∞–ø –æ–±—ä–µ–∫—Ç—ñ—Å—ñ
 * @param {Function} props.onToggleBookmark - –ë–µ—Ç–±–µ–ª–≥—ñ –∞—É—ã—Å“õ–∞–Ω–¥–∞ —à–∞“õ—ã—Ä—ã–ª–∞—Ç—ã–Ω —Ñ—É–Ω–∫—Ü–∏—è
 * @param {Function} props.onBorrow - –ö—ñ—Ç–∞–ø—Ç—ã –∞–ª—É —Ç“Ø–π–º–µ—Å—ñ –±–∞—Å—ã–ª“ì–∞–Ω–¥–∞ —à–∞“õ—ã—Ä—ã–ª–∞—Ç—ã–Ω —Ñ—É–Ω–∫—Ü–∏—è
 * @param {boolean} props.isDetails - –¢–æ–ª—ã“õ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –∫”©—Ä—Å–µ—Ç—ñ–ª—Å—ñ–Ω –±–µ?
 * @param {boolean} props.isLoading - –ñ“Ø–∫—Ç–µ–ª—É –∫“Ø–π—ñ
 * @param {Object} props.sx - “ö–æ—Å—ã–º—à–∞ Material UI —Å—Ç–∏–ª—å–¥–µ—Ä—ñ
 * @returns {JSX.Element} - –ö—ñ—Ç–∞–ø –∫–∞—Ä—Ç–æ—á–∫–∞—Å—ã
 */
const BookCard = ({
  book,
  onToggleBookmark,
  onBorrow,
  isDetails = false,
  isLoading = false,
  sx = {}
}) => {
  const theme = useTheme();
  const { t } = useTranslation();
  
  // –ö“Ø–π–ª–µ—Ä
  const [expanded, setExpanded] = useState(false);
  const [imageLoaded, setImageLoaded] = useState(false);
  const [imageError, setImageError] = useState(false);
  
  // –ö—ñ—Ç–∞–ø –æ–±—ä–µ–∫—Ç—ñ—Å—ñ –±–æ—Å –±–æ–ª—Å–∞ –Ω–µ–º–µ—Å–µ –∂“Ø–∫—Ç–µ–ª—É –∫“Ø–π—ñ–Ω–¥–µ –±–æ–ª—Å–∞
  if (isLoading || !book) {
    return (
      <Card 
        sx={{ 
          height: '100%', 
          display: 'flex', 
          flexDirection: 'column',
          position: 'relative',
          borderRadius: 2,
          overflow: 'hidden',
          ...sx
        }}
      >
        <Skeleton variant="rectangular" height={200} animation="wave" />
        <CardContent>
          <Skeleton variant="text" height={32} animation="wave" />
          <Skeleton variant="text" width="60%" height={24} animation="wave" />
          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>
            <Skeleton variant="text" width="40%" height={24} animation="wave" />
            <Skeleton variant="circular" width={24} height={24} animation="wave" />
          </Box>
        </CardContent>
      </Card>
    );
  }
  
  /**
   * –ë–µ—Ç–±–µ–ª–≥—ñ “õ–æ—Å—É/–∞–ª—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
   * 
   * @param {Event} e - –û“õ–∏“ì–∞ –æ–±—ä–µ–∫—Ç—ñ—Å—ñ
   */
  const handleToggleBookmark = (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (onToggleBookmark) {
      onToggleBookmark(book);
    }
  };
  
  /**
   * –ö—ñ—Ç–∞–ø—Ç—ã –∞–ª—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
   * 
   * @param {Event} e - –û“õ–∏“ì–∞ –æ–±—ä–µ–∫—Ç—ñ—Å—ñ
   */
  const handleBorrow = (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (onBorrow) {
      onBorrow(book);
    }
  };
  
  /**
   * –ö–∞—Ä—Ç–æ—á–∫–∞–Ω—ã –∫–µ“£–µ–π—Ç—É/–∂–∏—é —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
   * 
   * @param {Event} e - –û“õ–∏“ì–∞ –æ–±—ä–µ–∫—Ç—ñ—Å—ñ
   */
  const handleExpandClick = (e) => {
    e.preventDefault();
    e.stopPropagation();
    setExpanded(!expanded);
  };
  
  // –ö—ñ—Ç–∞–ø –º“±“õ–∞–±–∞ URL
  // For debugging purposes - log the cover URL
  // Force a direct URL for NarXoz book
  const coverUrl = book.title === 'NarXoz' ? 
    'http://localhost:5002/api/narxoz-cover' : 
    getBookCoverUrl(book.cover);
  
  // Debug our cover URL
  console.log(`üìó Book cover URL for "${book.title}" (ID: ${book.id}): ${coverUrl}`);
  console.log(`üìô Original cover path: ${book.cover}`);
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.group(`üìö –î–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ ${book.id}: ${book.title}`);
  
  if (book.relativeCoverPath) {
    console.log(`üîó –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ–±–ª–æ–∂–∫–∏: ${book.relativeCoverPath}`);
  }
  
  if (book.coverFileExists !== undefined) {
    console.log(`‚úÖ –§–∞–π–ª –æ–±–ª–æ–∂–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${book.coverFileExists ? '–î–∞' : '–ù–µ—Ç'}`);
  }
  
  if (book.coverFileSize !== undefined) {
    console.log(`üì¶ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –æ–±–ª–æ–∂–∫–∏: ${book.coverFileSize} –±–∞–π—Ç`);
  }
  
  // Try direct access to the book-cover-debug endpoint for NarXoz
  if (book.title === 'NarXoz' && book.cover && book.cover.includes('/uploads/covers/')) {
    const filename = book.cover.split('/uploads/covers/')[1];
    const debugUrl = `http://localhost:5002/api/book-cover-debug/${filename}`;
    console.log(`üîç Trying direct debug URL for NarXoz: ${debugUrl}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–∞
  if (coverUrl.startsWith('http')) {
    fetch(coverUrl, { method: 'HEAD' })
      .then(response => {
        console.log(`üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL: ${coverUrl} - ${response.status} ${response.ok ? 'OK' : 'FAILED'}`);
      })
      .catch(error => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL: ${coverUrl}`, error);
      });
  }
  
  console.groupEnd();
  
  // –ö—ñ—Ç–∞–ø—Ç—ã“£ “õ—ã—Å“õ–∞—à–∞ —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã
  const shortDescription = book.description
    ? book.description.length > 120
      ? `${book.description.substring(0, 120)}...`
      : book.description
    : '';
  
  // –ö—ñ—Ç–∞–ø –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Å—ã–Ω—ã“£ –∞—Ç—ã
  const categoryName = book.category?.name || '';
  
  // –ú“±“õ–∞–±–∞ —Å—É—Ä–µ—Ç—ñ–Ω—ñ“£ –∂“Ø–∫—Ç–µ–ª—É –æ“õ–∏“ì–∞—Å—ã
  const handleImageLoad = () => {
    console.log(`‚úÖ Image loaded successfully for book: ${book.title}`); 
    setImageLoaded(true);
    setImageError(false);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageError = (e) => {
    // –ó–¥–µ—Å—å –º—ã –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑–º–µ–Ω–∏—Ç—å src —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    // –≤–º–µ—Å—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏
    if (e.target && e.target.src) {
      console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–∫–∏ –∫–Ω–∏–≥–∏: ${book.title}, URL: ${e.target.src}`);
      
      // Special handling for NarXoz book
      if (book.title === 'NarXoz') {
        e.target.src = 'https://via.placeholder.com/200x300?text=NarXoz';
        console.log('‚úÖ –ó–∞–º–µ–Ω—è–µ–º –æ–±–ª–æ–∂–∫—É NarXoz –Ω–∞ placeholder');
        setImageLoaded(true);
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π src —É–∂–µ –∑–∞–ø–∞—Å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
      if (!e.target.src.includes('placeholder.com') && !e.target.src.includes('default-book-cover.jpg')) {
        // –ó–∞–º–µ–Ω—è–µ–º src –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –æ–±–ª–æ–∂–∫—É
        e.target.src = 'http://localhost:5002/uploads/covers/default-book-cover.jpg';
        console.log('‚úÖ –ó–∞–º–µ–Ω—è–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –æ–±–ª–æ–∂–∫—É');
        return;
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø—Ä—è–º—É—é –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º state
    setImageError(true);
    setImageLoaded(true); // –£–±–∏—Ä–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏
    console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–∫–∏ –∫–Ω–∏–≥–∏: ${book.title}, Original: ${book.cover}`);
  };

  return (
    <motion.div
      whileHover={{ 
        y: -5,
        transition: { duration: 0.2 }
      }}
    >
      <Card 
        sx={{ 
          height: '100%', 
          minHeight: 320,
          display: 'flex', 
          flexDirection: 'column',
          position: 'relative',
          borderRadius: 2,
          overflow: 'hidden',
          boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',
          transition: 'all 0.3s ease-in-out',
          border: '1px solid',
          borderColor: alpha(theme.palette.divider, 0.08),
          '&:hover': {
            boxShadow: '0 4px 16px rgba(0, 0, 0, 0.1)',
            borderColor: alpha(theme.palette.primary.main, 0.15),
          },
          ...sx
        }}
      >
        <CardActionArea 
          component={RouterLink} 
          to={`/books/${book.id}`}
          sx={{ 
            flexGrow: 1, 
            display: 'flex', 
            flexDirection: 'column', 
            alignItems: 'flex-start',
            height: '100%',
            '& .MuiCardActionArea-focusHighlight': {
              background: 'transparent'
            }
          }}
        >
          {/* –ö—ñ—Ç–∞–ø –º“±“õ–∞–±–∞—Å—ã */}
          <Box sx={{ position: 'relative', width: '100%', paddingTop: '130%' }}>
            {!imageLoaded && (
              <Skeleton 
                variant="rectangular" 
                animation="wave"
                sx={{ 
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  width: '100%',
                  height: '100%',
                  zIndex: 1
                }}
              />
            )}
            
            {imageError ? (
              <Box
                sx={{
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  width: '100%',
                  height: '100%',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  justifyContent: 'center',
                  backgroundColor: alpha(theme.palette.background.paper, 0.9),
                  color: theme.palette.text.secondary,
                }}
              >
                <BrokenImageIcon sx={{ fontSize: 48, mb: 1 }} />
                <Typography variant="caption" align="center" sx={{ px: 2 }}>
                  {t('books.coverLoadFailed', '–ú“±“õ–∞–±–∞ –∂“Ø–∫—Ç–µ–ª–º–µ–¥—ñ')}
                </Typography>
                {/* –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ */}
                <Typography variant="caption" align="center" sx={{ 
                  px: 2, 
                  fontSize: '0.6rem', 
                  color: 'text.disabled',
                  display: 'block',
                  mt: 1
                }}>
                  {book.title} (ID: {book.id})
                </Typography>
                <Typography variant="caption" align="center" sx={{ 
                  px: 2, 
                  fontSize: '0.6rem', 
                  color: 'error.light',
                  display: 'block',
                  wordBreak: 'break-all'
                }}>
                  {book.cover || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±–ª–æ–∂–∫–µ'}
                </Typography>
              </Box>
            ) : (
              <CardMedia
                component="img"
                image={coverUrl}
                alt={book.title}
                onLoad={handleImageLoad}
                onError={handleImageError}
                sx={{
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  opacity: imageLoaded ? 1 : 0,
                  transition: 'opacity 0.3s ease-in-out',
                  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS
                  crossOrigin: 'anonymous',
                  backgroundColor: 'background.paper' // Add background color to help with visibility
                }}
              />
            )}
            
            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è —á–∏–ø—ñ */}
            {categoryName && (
              <Chip
                label={categoryName}
                size="small"
                sx={{
                  position: 'absolute',
                  top: 8,
                  left: 8,
                  backgroundColor: alpha(theme.palette.primary.main, 0.85),
                  color: theme.palette.primary.contrastText,
                  fontWeight: 'medium',
                  fontSize: '0.7rem'
                }}
              />
            )}
            
            {/* “ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            {book.availableCopies <= 0 && (
              <Box
                sx={{
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  width: '100%',
                  height: '100%',
                  backgroundColor: alpha(theme.palette.background.paper, 0.7),
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  justifyContent: 'center',
                }}
              >
                <VisibilityOffIcon 
                  sx={{ 
                    fontSize: 60, 
                    color: alpha(theme.palette.error.main, 0.8)
                  }} 
                />
                <Typography 
                  variant="subtitle1" 
                  sx={{ 
                    fontWeight: 'bold', 
                    color: alpha(theme.palette.error.main, 0.8),
                    mt: 1
                  }}
                >
                  {t('books.temporarilyUnavailable', '–£–∞“õ—ã—Ç—à–∞ “õ–æ–ª–∂–µ—Ç—ñ–º—Å—ñ–∑')}
                </Typography>
              </Box>
            )}
          </Box>
          
          {/* –ö—ñ—Ç–∞–ø –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ */}
          <CardContent sx={{ flexGrow: 1, width: '100%', p: 2 }}>
            <Typography 
              gutterBottom 
              variant="h6" 
              component="div" 
              sx={{ 
                fontWeight: 'bold',
                overflow: 'hidden',
                textOverflow: 'ellipsis',
                display: '-webkit-box',
                WebkitLineClamp: 1,
                WebkitBoxOrient: 'vertical',
                lineHeight: 1.3,
                height: '1.3em',
                fontSize: '0.95rem',
                mb: 0.5
              }}
            >
              {book.title}
            </Typography>
            
            <Typography 
              variant="body2" 
              color="text.secondary"
              sx={{ 
                mb: 0.5, 
                fontSize: '0.85rem',
                overflow: 'hidden',
                textOverflow: 'ellipsis',
                whiteSpace: 'nowrap'
              }}
            >
              {book.author}
            </Typography>
            
            {/* –†–µ–π—Ç–∏–Ω–≥ */}
            <Box sx={{ mb: 0.5 }}>
              <BookRating 
                rating={book.rating || 0} 
                reviewCount={book.reviewCount || 0}
                size="small"
              />
            </Box>

            {/* –ñ—ã–ª –∂”ô–Ω–µ —Ç—ñ–ª */}
            <Box sx={{ 
              display: 'flex', 
              justifyContent: 'space-between', 
              alignItems: 'center',
              mb: 1
            }}>
              <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <CalendarIcon sx={{ fontSize: '0.875rem', color: 'text.secondary', mr: 0.5 }} />
                <Typography 
                  variant="body2" 
                  color="text.secondary"
                >
                  {book.publicationYear}
                </Typography>
              </Box>
              
              <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <LanguageIcon sx={{ fontSize: '0.875rem', color: 'text.secondary', mr: 0.5 }} />
                <Typography 
                  variant="body2" 
                  color="text.secondary"
                >
                  {t(`languages.${book.language}`) || t(book.language) || book.language}
                </Typography>
              </Box>
            </Box>
            
            {/* –°–∏–ø–∞—Ç—Ç–∞–º–∞ (–µ–≥–µ—Ä isDetails=true –±–æ–ª—Å–∞) */}
            {isDetails && (
              <>
                <Box 
                  sx={{ 
                    display: 'flex', 
                    justifyContent: 'space-between', 
                    alignItems: 'center',
                    mb: 1
                  }}
                >
                  <Typography 
                    variant="body2" 
                    sx={{ fontWeight: 'medium' }}
                  >
                    {t('books.description', '–°–∏–ø–∞—Ç—Ç–∞–º–∞')}
                  </Typography>
                  <IconButton
                    size="small"
                    onClick={handleExpandClick}
                    aria-expanded={expanded}
                    aria-label="—Å–∏–ø–∞—Ç—Ç–∞–º–∞–Ω—ã –∫”©—Ä—Å–µ—Ç—É"
                  >
                    {expanded ? <ExpandLessIcon fontSize="small" /> : <ExpandMoreIcon fontSize="small" />}
                  </IconButton>
                </Box>
                
                <Collapse in={expanded} timeout="auto" unmountOnExit>
                  <Typography variant="body2" paragraph>
                    {book.description}
                  </Typography>
                </Collapse>
                
                {!expanded && (
                  <Typography
                    variant="body2"
                    color="text.secondary"
                    sx={{
                      overflow: 'hidden',
                      textOverflow: 'ellipsis',
                      display: '-webkit-box',
                      WebkitLineClamp: 2,
                      WebkitBoxOrient: 'vertical',
                    }}
                  >
                    {shortDescription}
                  </Typography>
                )}
              </>
            )}
          </CardContent>
        </CardActionArea>
        
        {/* –¢”©–º–µ–Ω–≥—ñ –ø–∞–Ω–µ–ª—å –∂”ô–Ω–µ ”ô—Ä–µ–∫–µ—Ç—Ç–µ—Ä */}
        <Divider />
        <CardActions sx={{ 
          p: 1.5, 
          pt: 1, 
          pb: 1, 
          justifyContent: 'space-between',
          mt: 'auto',
          borderTop: 1,
          borderColor: 'divider'
        }}>
          <Box sx={{ display: 'flex', alignItems: 'center' }}>
            <Tooltip 
              title={book.availableCopies > 0 ? t('books.available', '“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ') : t('books.unavailable', '“ö–æ–ª–∂–µ—Ç—ñ–º—Å—ñ–∑')}
              arrow
            >
              <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <LocalLibraryIcon 
                  fontSize="small" 
                  color={book.availableCopies > 0 ? "success" : "disabled"} 
                  sx={{ mr: 0.5 }} 
                />
                <Typography 
                  variant="caption" 
                  color={book.availableCopies > 0 ? "success.main" : "text.disabled"}
                  sx={{ fontWeight: 'medium' }}
                >
                  {book.availableCopies || 0}
                </Typography>
              </Box>
            </Tooltip>
          </Box>
          
          {/* –ë–µ—Ç–±–µ–ª–≥—ñ —Ç“Ø–π–º–µ—Å—ñ */}
          <Box>
            {book.availableCopies > 0 && onBorrow && (
              <Button
                size="small"
                variant="contained"
                startIcon={<LocalLibraryIcon />}
                onClick={handleBorrow}
                sx={{ 
                  mr: 1,
                  borderRadius: 2,
                  boxShadow: 'none',
                  '&:hover': {
                    boxShadow: theme.shadows[2]
                  }
                }}
              >
                {t('books.borrow', '–ê–ª—É')}
              </Button>
            )}
            
            <Tooltip 
              title={book.isBookmarked ? t('books.removeFromBookmarks', '–ë–µ—Ç–±–µ–ª–≥—ñ–¥–µ–Ω –∞–ª—ã–ø —Ç–∞—Å—Ç–∞—É') : t('books.addToBookmarks', '–ë–µ—Ç–±–µ–ª–≥—ñ–≥–µ “õ–æ—Å—É')}
              arrow
            >
              <IconButton
                onClick={handleToggleBookmark}
                size="small"
                color="primary"
                aria-label={book.isBookmarked ? t('books.removeFromBookmarks', '–ë–µ—Ç–±–µ–ª–≥—ñ–¥–µ–Ω –∞–ª—ã–ø —Ç–∞—Å—Ç–∞—É') : t('books.addToBookmarks', '–ë–µ—Ç–±–µ–ª–≥—ñ–≥–µ “õ–æ—Å—É')}
              >
                {book.isBookmarked ? (
                  <BookmarkIcon color="primary" />
                ) : (
                  <BookmarkBorderIcon />
                )}
              </IconButton>
            </Tooltip>
          </Box>
        </CardActions>
      </Card>
    </motion.div>
  );
};

BookCard.propTypes = {
  book: PropTypes.object,
  onToggleBookmark: PropTypes.func,
  onBorrow: PropTypes.func,
  isDetails: PropTypes.bool,
  isLoading: PropTypes.bool,
  sx: PropTypes.object
};

export default BookCard;